---LAB-11---

CREATE TABLE STU_INFO(
      RNO INT ,
	  NAME VARCHAR(50),
	  BRANCH VARCHAR(50)
);

CREATE TABLE RESULT(
       RNO INT,
	   SPI DECIMAL(8,2)
);

CREATE TABLE EMPLOYEE_MASTERS(
     EMPLOYEENO VARCHAR(50),
     NAME VARCHAR(40),
	 MANAGERNO VARCHAR(40)
);

INSERT INTO STU_INFO VALUES (101,'RAJU','CE');
INSERT INTO STU_INFO VALUES (102,'AMIT','CE');
INSERT INTO STU_INFO VALUES (103,'SANJAY','ME');
INSERT INTO STU_INFO VALUES (104,'NEHA','EC');
INSERT INTO STU_INFO VALUES (105,'MEERA','EE');
INSERT INTO STU_INFO VALUES (106,'MAHESH','ME');

INSERT INTO RESULT VALUES (101,8.8);
INSERT INTO RESULT VALUES (102,9.2);
INSERT INTO RESULT VALUES (103,7.6);
INSERT INTO RESULT VALUES (104,8.2);
INSERT INTO RESULT VALUES (105,7.0);
INSERT INTO RESULT VALUES (106,8.9);

INSERT INTO EMPLOYEE_MASTERS VALUES ('E01','TARUN','NULL');
INSERT INTO EMPLOYEE_MASTERS VALUES ('E02','ROHAN','E02');
INSERT INTO EMPLOYEE_MASTERS VALUES ('E03','PRIYA','E01');
INSERT INTO EMPLOYEE_MASTERS VALUES ('E04','MILAN','E03');
INSERT INTO EMPLOYEE_MASTERS VALUES ('E05','JAY','E01');
INSERT INTO EMPLOYEE_MASTERS VALUES ('E06','ANJANA','E04');

--PART-A---

--1) Combine information from student and result table using cross join or Cartesian product.

SELECT * FROM STU_INFO CROSS JOIN RESULT

--2) Perform inner join on Student and Result tables.
SELECT * FROM STU_INFO INNER JOIN RESULT ON STU_INFO.RNO = RESULT.RNO

--3) Perform the left outer join on Student and Result tables.

SELECT * FROM STU_INFO LEFT OUTER JOIN RESULT ON STU_INFO.RNO = RESULT.RNO

--4) Perform the right outer join on Student and Result tables.

SELECT * FROM STU_INFO RIGHT OUTER JOIN RESULT ON STU_INFO.RNO = RESULT.RNO

--5) Perform the full outer join on Student and Result tables. 

SELECT * FROM STU_INFO FULL OUTER JOIN RESULT ON STU_INFO.RNO = RESULT.RNO

--6) Display Rno, Name, Branch and SPI of all students.

SELECT S.RNO, S.NAME, S.BRANCH, R.SPI 
FROM STU_INFO AS S JOIN RESULT AS R ON S.RNO = R.RNO 

--7) Display Rno, Name, Branch and SPI of CE branch’s student only.

SELECT S.RNO, S.NAME, S.BRANCH, R.SPI 
FROM STU_INFO AS S JOIN RESULT AS R ON S.RNO = R.RNO 
WHERE S.BRANCH='CE'

--8) Display Rno, Name, Branch and SPI of other than EC branch’s student only.

SELECT S.RNO, S.NAME, S.BRANCH, R.SPI 
FROM STU_INFO AS S JOIN RESULT AS R ON S.RNO = R.RNO 
WHERE S.BRANCH <> 'EC'

--9) Display average result of each branch.

SELECT S.BRANCH,AVG(R.SPI) AS AVG_SPI
FROM STU_INFO AS S JOIN RESULT AS R ON S.RNO = R.RNO 
GROUP BY S.BRANCH

--10) Display average result of CE and ME branch.

SELECT S.BRANCH,AVG(R.SPI) AS AVG_SPI
FROM STU_INFO AS S JOIN RESULT AS R ON S.RNO = R.RNO 
WHERE S.BRANCH IN ('EC','CE')
GROUP BY S.BRANCH

--PART-B----

--1) Display average result of each branch and sort them in ascending order by SPI.

SELECT S.BRANCH,AVG(R.SPI) AS AVG_SPI
FROM STU_INFO AS S JOIN RESULT AS R ON S.RNO = R.RNO 
GROUP BY S.BRANCH
ORDER BY AVG_SPI

--2)  Display highest SPI from each branch and sort them in descending order.

SELECT S.BRANCH,MAX(R.SPI) AS MAX_SPI
FROM STU_INFO AS S JOIN RESULT AS R ON S.RNO = R.RNO 
GROUP BY S.BRANCH
ORDER BY MAX_SPI DESC

--PART-C-----

--1) Retrieve the names of employee along with their manager’s name from the Employee table.

SELECT * FROM EMPLOYEE_MASTERS
SELECT E.NAME,S.NAME
FROM EMPLOYEE_MASTERS AS S RIGHT OUTER JOIN EMPLOYEE_MASTERS AS E ON S.EMPLOYEENO = E.MANAGERNO













   